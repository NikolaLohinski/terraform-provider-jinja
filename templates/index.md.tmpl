---
page_title: "Jinja provider"
subcategory: ""
description: |-
 The Jinja provider is used render Jinja templates within terraform context. 
---

# Jinja provider

The "jinja" provider makes it possible to use [Jinja](https://jinja.palletsprojects.com) templating within Terraform context. This is a *logical provider*, which means that it works entirely within Terraform's logic, and doesn't interact with any other services.

## Example

{{ tffile "examples/provider.tf" }}

{{ .SchemaMarkdown | trimspace }}

## Important considerations

The Jinja engine used under the hood is based on [the `gonja` Golang library](https://github.com/nikolalohinski/gonja) and aims to be "mostly" compliant with the Jinja API. 

Finally, the JSON schema validation engine is based on [the `jsonschema` Golang library](https://github.com/santhosh-tekuri/jsonschema).

The following sections describe the features available in the engine.

{{- /*
    The following magic is to use the codefile function to load a plain markdown file.
    tfplugindocs has only the codefile function to work with and it wraps the content of 
    the file with "```" as if it was code. The following helper loops over the contents of
    the file while remove the first and last lines that contain "```" with pure native go
    template logic.
*/ -}}
{{ define "file" }}
{{- $contents := split (codefile "" .) "\n" }}
{{ range $index, $line := $contents }}
{{- if gt $index 0 }}
{{- if lt $index (len (slice (printf "%*s" (len $contents) "") 1)) }}
{{- $line }}
{{ end }}{{ end }}{{ end }}{{ end }}

{{ template "file" "vendor/github.com/nikolalohinski/gonja/docs/statements.md" }}
{{ template "file" "vendor/github.com/nikolalohinski/gonja/docs/globals.md" }}
{{ template "file" "vendor/github.com/nikolalohinski/gonja/docs/filters.md" }}
{{ template "file" "vendor/github.com/nikolalohinski/gonja/docs/tests.md" }}